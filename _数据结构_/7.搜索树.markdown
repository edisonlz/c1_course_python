#### 搜索树平衡树


建立二叉搜索树规则：
　①若元素值大于根结点值，元素成为右子结点
　②若元素值小于根结点值，元素成为左子结点

a = [1,2,3,4,5,6,7,8]

```python
      5
     / \
    3   7
   /\   /\
  2  4 6  8
  / 
 1  
```

```python 
       1
        \
         2
          \
           3
            \
             n
```

搜索树平衡树： AVL树 ，红黑树，B树，B+树。


##### AVL树 

##### 1. 什么是AVL树
任何两个子树的高度差最大是1，这样的二叉树叫做AVL树。

概念：

平衡因子：将二叉树上节点的左子树高度减去右子树高度的值称为该节点的平衡因子BF(Balance Factor)。

最小不平衡子树：距离插入节点最近的，且平衡因子的绝对值大于1的节点为根的子树。


![大纲1](./static/avl平衡树.png)
左边二叉树的节点45的BF = 2。

节点45是距离插入点43最近的BF不在[-1,1]范围内的节点，因此以节点45为根的子树为最小不平衡子树。

##### 2. AVL树的调整
如果在AVL树中进行插入或删除节点后，可能导致AVL树失去平衡。这种不平衡可能出现在下面四种情况中：

对a的左儿子的左子树进行一次插入。（LL）
对a的左儿子的右子树进行一次插入。（LR）
对a的右儿子的左子树进行一次插入。（RL）
对a的右儿子的右子树进行一次插入。（RR）

第一种情况（1、4）需要通过对树的一次单旋转完成调整。
第二种情况（2、3）需要通过对树的一次双旋转完成调整。


3.1 LL旋转
在左子树上插入左孩子导致AVL树失衡,"根的左子树的高度"比"根的右子树的高度"大2。针对该情况，我们需要进行单右旋转来完成对树的调整。


![大纲1](./static/LL.png)


3.2 RR旋转
在右子树插入右孩子导致AVL失衡时，我们需要进行单左旋调整。旋转围绕最小失衡子树的根节点进行。
![大纲1](./static/rr.png)


3.3 RL旋转
“在右子树上插入左孩子导致AVL树失衡",此时我们需要进行先右旋后左旋的调整。

![大纲1](./static/rl.png)

3.4 LR旋转
“在左子树上插入右孩子导致AVL树失衡",此时我们需要进行先左旋后右旋的调整。


![大纲1](./static/lr.png)

